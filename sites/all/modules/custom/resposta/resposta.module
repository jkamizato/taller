<?php
/**
 * @file
 * Code for the Resposta feature.
 */

include_once 'resposta.features.inc';
include_once 'RespostaController.php';

/**
 * Implements hook_block_info().
 */
function resposta_block_info()
{
    $blocks = array();

    $blocks['block_form_resposta'] = array(
        'info' => t('Block Form Resposta'),
        'title' => t('Resposta'),
        'region' => 'content',
        'status' => 1,
        'cache' => DRUPAL_NO_CACHE,
    );

    return $blocks;
}

/**
 * Implements hook_block_view().
 */
function resposta_block_view($delta = '')
{
    $block = array();

    switch ($delta) {
        case 'block_form_resposta' :
            $block['content'] = resposta_block_content();
            $block['subject'] = t('Bloco resposta');
            break;
    }

    return $block;
}

function resposta_block_content() {
    $node = node_load(arg(1));
    if ($node->field_ticket_status[LANGUAGE_NONE][0]['value'] == 'aguardando') {
        return  drupal_get_form('_resposta_form');
    }
}

function _resposta_form($form, &$form_state)
{
    global $user;

    $form['body'] = array(
        '#type' => 'text_format', //you can find a list of available types in the form api
        '#required' => TRUE, //make this field required
        );

    $form['ticket_nid'] = array(
        '#type' => 'hidden',
        '#value' => arg(1)
    );

    $form['uid'] = array(
        '#type' => 'hidden',
        '#value' => $user->uid,
    );

    $form['submit_button'] = array(
        '#type' => 'submit',
        '#value' => t('Salvar'),
        '#validate' => array('resposta_form_validate'),
        '#submit' => array('resposta_form_submit')
    );


    return $form;
}

function resposta_form_validate($form, &$form_state) {
    $respostaController = new RespostaController();
    if (!$respostaController->saveValidation($form_state['values']['ticket_nid'])) {
        form_set_error('body', 'Não foi possível salvar a resposta');
    }
}

function resposta_form_submit($form, &$form_state) {

    $resposta = new stdClass();
    $resposta->type = 'resposta';
    node_object_prepare($resposta);
    $resposta->body[LANGUAGE_NONE][0]['value'] = $form_state['values']['body']['value'];
    $resposta->title = 'Resposta';
    $resposta->field_resposta_ticket[LANGUAGE_NONE][0]['target_id'] = $form_state['values']['ticket_nid'];
    node_save($resposta);


    $ticket = node_load($form_state['values']['ticket_nid']);
    $ticket->field_ticket_atendido_user[LANGUAGE_NONE][0]['target_id'] = $form_state['values']['uid'];
    $ticket->field_ticket_atualizacao[LANGUAGE_NONE][0]['value'] = time();
    node_save($ticket);
}

function resposta_menu() {
    $items['ticket/%/resposta'] = array(
        'page callback' => '_ticket_node_resposta',
        'access arguments' => array('access content')
    );

    return $items;
}

function _ticket_node_resposta()
{
    return theme('ticket_node_resposta', array('node' => node_load(arg(1))));
}

/**
 * Implements hook_theme().
 */
function resposta_theme($existing, $type, $theme, $path)
{
    return array(
        'ticket_node_resposta' => array(
            'template' => 'node'
        )
    );
}
